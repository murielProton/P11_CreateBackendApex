export default [
    {
        "title": "Home",
        "fileName": "index.html",
        "text": "Home Project Home Use the apexdox.homePagePath  setting to point to an HTML file that contains details about your project. The body of the HTML will show up here instead of this default!"
    },
    {
        "title": "AccountDataFactory",
        "fileName": "AccountDataFactory.html",
        "text": "AccountDataFactory : Signature public with sharing class AccountDataFactory Author : Muriel Proton AccountDataFactory Methods createAccountsList(numberOfAccounts) insert method, a number of records on Account equal to the parametter createAccountsList(numberOfAccounts) insert method, a number of records on Account equal to the parametter Signature public static void createAccountsList(Integer numberOfAccounts) Parameters Integer Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "AccountDataFactory_Test",
        "fileName": "AccountDataFactory_Test.html",
        "text": "AccountDataFactory_Test : Signature @isTest public with sharing class AccountDataFactory_Test Author : Muriel Proton AccountDataFactory_Test Properties Name Signature nameLike private static String nameLike AccountDataFactory_Test Methods testCreateAccountsList() Test method for AccountDataFactory.createAccountsList(5) testCreateAccountsList() Test method for AccountDataFactory.createAccountsList(5) Signature @isTest public static void testCreateAccountsList() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "AccountGet",
        "fileName": "AccountGet.html",
        "text": "AccountGet : Signature public with sharing class AccountGet Author : Muriel Proton AccountGet Methods checkPermissionAccount() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD getAccontsByIds(accountIDSet) Get all Account records which have the same Ids as the one in the Set passed as parametter. getAccontsLinkedToOrders(orderList) Get all Account records linked to a record on Order, in the list of Orders passed as parametter getAccontsNOTLinkedToOrders(accountIDSetOfAllDeletedOrders) Get all Account records not linked to a record on Order getAccountActiveFalse() Get all Account records where the field Active__c is false getAccountActiveTrue() Get all Account records where the field Active__c is true getAccountByName(accountName) Get method for all the records on Account with the name passed as parametter getAccountsAll() Get method for all the records on Account checkPermissionAccount() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature private static void checkPermissionAccount() Author Muriel Proton | 13-02-2023 getAccontsByIds(accountIDSet) Get all Account records which have the same Ids as the one in the Set passed as parametter. Signature public static Set<Account> getAccontsByIds(Set<Id> accountIDSet) Parameters Set<Id> Returns Set<Account> Author Muriel Proton | 13-02-2023 getAccontsLinkedToOrders(orderList) Get all Account records linked to a record on Order, in the list of Orders passed as parametter Signature public static Set<Account> getAccontsLinkedToOrders(List<Order> orderList) Parameters List<Order> Returns Set<Account> Author Muriel Proton | 13-02-2023 getAccontsNOTLinkedToOrders(accountIDSetOfAllDeletedOrders) Get all Account records not linked to a record on Order Signature public static List<Account> getAccontsNOTLinkedToOrders(Set<Id> accountIDSetOfAllDeletedOrders) Parameters Set<Id> Returns List<Account> Author Muriel Proton | 13-02-2023 getAccountActiveFalse() Get all Account records where the field Active__c is false Signature public static List<Account> getAccountActiveFalse() Returns List<Account> Author Muriel Proton | 13-02-2023 getAccountActiveTrue() Get all Account records where the field Active__c is true Signature public static List<Account> getAccountActiveTrue() Returns List<Account> Author Muriel Proton | 13-02-2023 getAccountByName(accountName) Get method for all the records on Account with the name passed as parametter Signature public static Account getAccountByName(String accountName) Parameters String Returns Account Author Muriel Proton | 13-02-2023 getAccountsAll() Get method for all the records on Account Signature public static List<Account> getAccountsAll() Returns List<Account> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "AccountGet_Test",
        "fileName": "AccountGet_Test.html",
        "text": "AccountGet_Test : Signature @isTest public with sharing class AccountGet_Test Author : Muriel Proton AccountGet_Test Properties Name Signature accountName private static String accountName AccountGet_Test Methods setupAccountGet() TestSetup for AccountGet_Test testGetAccontsByIds() Test method for AccountGet.getAccontsByIds(accountIDSet) testGetAccontsLinkedToOrders() Test method for AccountGet.getAccontsLinkedToOrders(orderList) testGetAccountActiveFalse() Test method for AccountGet.getAccountActiveFalse() testGetAccountActiveTrue() Test method for AccountGet.getAccountActiveTrue() testGetAccountByName() Test method for AccountGet.getAccountByName(accountName+3) testGetAccountNotLinkedToOrders() Test method for AccountGet.getAccontsNOTLinkedToOrders(accountIDSetOfAllDeletedOrders) testGetAccountsAll() Test method for AccountGet.getAccountsAll() setupAccountGet() TestSetup for AccountGet_Test Signature @TestSetup static void setupAccountGet() Author Muriel Proton | 13-02-2023 testGetAccontsByIds() Test method for AccountGet.getAccontsByIds(accountIDSet) Signature @isTest public static void testGetAccontsByIds() Author Muriel Proton | 13-02-2023 testGetAccontsLinkedToOrders() Test method for AccountGet.getAccontsLinkedToOrders(orderList) Signature @isTest public static void testGetAccontsLinkedToOrders() Author Muriel Proton | 13-02-2023 testGetAccountActiveFalse() Test method for AccountGet.getAccountActiveFalse() Signature @isTest public static void testGetAccountActiveFalse() Author Muriel Proton | 13-02-2023 testGetAccountActiveTrue() Test method for AccountGet.getAccountActiveTrue() Signature @isTest public static void testGetAccountActiveTrue() Author Muriel Proton | 13-02-2023 testGetAccountByName() Test method for AccountGet.getAccountByName(accountName+3) Signature @isTest public static void testGetAccountByName() Author Muriel Proton | 13-02-2023 testGetAccountNotLinkedToOrders() Test method for AccountGet.getAccontsNOTLinkedToOrders(accountIDSetOfAllDeletedOrders) Signature @isTest public static void testGetAccountNotLinkedToOrders() Author Muriel Proton | 13-02-2023 testGetAccountsAll() Test method for AccountGet.getAccountsAll() Signature @isTest public static void testGetAccountsAll() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "AccountUpdate",
        "fileName": "AccountUpdate.html",
        "text": "AccountUpdate : Signature public with sharing class AccountUpdate Author : Muriel Proton AccountUpdate Methods checkPermissionAndUpdateAccount(accountListToUpdate) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD updateAccountFieldActiveToFalse(accountList) Update methode to change the field Active__c on Account to false updateAccountFieldActiveToTrue(accountList) Update methode to change the field Active__c on Account to true checkPermissionAndUpdateAccount(accountListToUpdate) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature public static void checkPermissionAndUpdateAccount(List<Account> accountListToUpdate) Parameters List<Account> Author Muriel Proton | 13-02-2023 updateAccountFieldActiveToFalse(accountList) Update methode to change the field Active__c on Account to false Signature public static void updateAccountFieldActiveToFalse(List<Account> accountList) Parameters List<Account> Author Muriel Proton | 13-02-2023 updateAccountFieldActiveToTrue(accountList) Update methode to change the field Active__c on Account to true Signature public static void updateAccountFieldActiveToTrue(List<Account> accountList) Parameters List<Account> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "AccountUpdate_Test",
        "fileName": "AccountUpdate_Test.html",
        "text": "AccountUpdate_Test : Signature @isTest public with sharing class AccountUpdate_Test Author : Muriel Proton AccountUpdate_Test Methods setupAccountUpdate() TestSetup for AccountUpdate_Test testUpdateAccountFieldActiveToFalse() test method for AccountUpdate.updateAccountFieldActiveToFalse(accountListToUpdate) testUpdateAccountFieldActiveToTrue() test method for AccountUpdate.updateAccountFieldActiveToTrue(accountListToUpdate) setupAccountUpdate() TestSetup for AccountUpdate_Test Signature @TestSetup static void setupAccountUpdate() Author Muriel Proton | 13-02-2023 testUpdateAccountFieldActiveToFalse() test method for AccountUpdate.updateAccountFieldActiveToFalse(accountListToUpdate) Signature @isTest public static void testUpdateAccountFieldActiveToFalse() Author Muriel Proton | 13-02-2023 testUpdateAccountFieldActiveToTrue() test method for AccountUpdate.updateAccountFieldActiveToTrue(accountListToUpdate) Signature @isTest public static void testUpdateAccountFieldActiveToTrue() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "ContractDataFactory",
        "fileName": "ContractDataFactory.html",
        "text": "ContractDataFactory : Signature public with sharing class ContractDataFactory Author : Muriel Proton ContractDataFactory Methods constructContract(accountID) construct one Contract record linked to the Account ID passed as parametter createContractsList(accountsList) Insert method of Contract reccords linked to Account list passed as parametter, as many as the number of records as parametter constructContract(accountID) construct one Contract record linked to the Account ID passed as parametter Signature public static Contract constructContract(Id accountID) Parameters Id Returns Contract Author Muriel Proton | 13-02-2023 createContractsList(accountsList) Insert method of Contract reccords linked to Account list passed as parametter, as many as the number of records as parametter Signature public static void createContractsList(List<Account> accountsList) Parameters List<Account> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "ContractDataFactory_Test",
        "fileName": "ContractDataFactory_Test.html",
        "text": "ContractDataFactory_Test : Signature @isTest public with sharing class ContractDataFactory_Test Author : Muriel Proton ContractDataFactory_Test Properties Name Signature accountName private static String accountName ContractDataFactory_Test Methods setupContractDataFactory() TestSetup for ContractDataFactory_Test testConstructContract() Test method for ContractDataFactory.constructContract(accountForTest.Id) testCreateContractsList() Test method for ContractDataFactory.createContractsList(accountsList) setupContractDataFactory() TestSetup for ContractDataFactory_Test Signature @TestSetup static void setupContractDataFactory() Author Muriel Proton | 13-02-2023 testConstructContract() Test method for ContractDataFactory.constructContract(accountForTest.Id) Signature @isTest static void testConstructContract() Author Muriel Proton | 13-02-2023 testCreateContractsList() Test method for ContractDataFactory.createContractsList(accountsList) Signature @isTest static void testCreateContractsList() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "ContractGet",
        "fileName": "ContractGet.html",
        "text": "ContractGet : Signature public with sharing class ContractGet Author : Muriel Proton ContractGet Methods checkPermissionContract() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD getContractsAll() Get method for all Contract records getContractsOfAccount(accountId) Get method for Contract records linked to the Account Id passed as parametter checkPermissionContract() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature private static void checkPermissionContract() Author Muriel Proton | 13-02-2023 getContractsAll() Get method for all Contract records Signature public static List<Contract> getContractsAll() Returns List<Contract> Author Muriel Proton | 13-02-2023 getContractsOfAccount(accountId) Get method for Contract records linked to the Account Id passed as parametter Signature public static List<Contract> getContractsOfAccount(Id accountId) Parameters ID Returns List<Contract> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "ContractGet_Test",
        "fileName": "ContractGet_Test.html",
        "text": "ContractGet_Test : Signature @isTest public with sharing class ContractGet_Test Author : Muriel Proton ContractGet_Test Methods setupContractGet() TestSetup for ContractGet_Test testGetContractsAll() Test method for ContractGet.getContractsAll() testGetContractsOfAccount() Test method for ContractGet.getContractsOfAccount(accountId) setupContractGet() TestSetup for ContractGet_Test Signature @TestSetup static void setupContractGet() Author Muriel Proton | 13-02-2023 testGetContractsAll() Test method for ContractGet.getContractsAll() Signature @isTest public static void testGetContractsAll() Author Muriel Proton | 13-02-2023 testGetContractsOfAccount() Test method for ContractGet.getContractsOfAccount(accountId) Signature @isTest public static void testGetContractsOfAccount() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "ContractUpdate",
        "fileName": "ContractUpdate.html",
        "text": "ContractUpdate : Signature public with sharing class ContractUpdate Author : Muriel Proton ContractUpdate Methods updateContractsStatusToActivated(contractsList) Update Method to change field Status to Activated on Contract List records passed as parametter updateContractsStatusToActivated(contractsList) Update Method to change field Status to Activated on Contract List records passed as parametter Signature public static void updateContractsStatusToActivated(List<Contract> contractsList) Parameters List<Contract> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "ContractUpdate_Test",
        "fileName": "ContractUpdate_Test.html",
        "text": "ContractUpdate_Test : Signature @isTest public with sharing class ContractUpdate_Test Author : Muriel Proton ContractUpdate_Test Methods setupContractUpdate() TestSetup for ContractUpdate_Test testUpdateContractsListStatusToActivated() Test method for ContractUpdate.updateContractsStatusToActivated(contractsList) setupContractUpdate() TestSetup for ContractUpdate_Test Signature @TestSetup static void setupContractUpdate() Author Muriel Proton | 13-02-2023 testUpdateContractsListStatusToActivated() Test method for ContractUpdate.updateContractsStatusToActivated(contractsList) Signature @isTest static void testUpdateContractsListStatusToActivated() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "CRUDPermissionBeforSOQLDMLException",
        "fileName": "CRUDPermissionBeforSOQLDMLException.html",
        "text": "CRUDPermissionBeforSOQLDMLException : Signature public with sharing class CRUDPermissionBeforSOQLDMLException extends Exception Author : Muriel Proton"
    },
    {
        "title": "OrderDataFactory",
        "fileName": "OrderDataFactory.html",
        "text": "OrderDataFactory : Signature public with sharing class OrderDataFactory Author : Muriel Proton OrderDataFactory Properties Name Signature orderName public static String orderName OrderDataFactory Methods constructOneOrder(orderName, accountID, contractID, pricebookId) Construct method one Order with 4 parametters : name of an Order, Id of an Account, Id of a Contract, Id of a Pricebook createOrdersListForEachContract(contractListToCreateOrders, pricebook) Insert method for one Order with the mandatory 2 parametters constructOneOrder(orderName, accountID, contractID, pricebookId) Construct method one Order with 4 parametters : name of an Order, Id of an Account, Id of a Contract, Id of a Pricebook Signature public static Order constructOneOrder(String orderName, Id accountID, Id contractID, Id pricebookId) Parameters String Id Id Id Returns Order Author Muriel Proton | 13-02-2023 createOrdersListForEachContract(contractListToCreateOrders, pricebook) Insert method for one Order with the mandatory 2 parametters Signature public static void createOrdersListForEachContract(List<Contract> contractListToCreateOrders, PriceBook2 pricebook) Parameters List<Contract> PriceBook2 Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderDataFactory_Test",
        "fileName": "OrderDataFactory_Test.html",
        "text": "OrderDataFactory_Test : Signature @isTest public with sharing class OrderDataFactory_Test Author : Muriel Proton OrderDataFactory_Test Properties Name Signature accountName private static String accountName orderName public static String orderName pricebook2Name private static String pricebook2Name OrderDataFactory_Test Methods setupOrderDataFactory() TestSetup for OrderDataFactory_Test testConstructOneOrder() Test method for OrderDataFactory.constructOneOrder(orderName, accountForThisTest.ID, contractForThisTest.ID, pricebookForThisTest.Id) testCreateOrdersListForEachContract() Test method for OrderDataFactory.createOrdersListForEachContract(contractListToCreateOrders, pricebookForThisTest) setupOrderDataFactory() TestSetup for OrderDataFactory_Test Signature @TestSetup static void setupOrderDataFactory() Author Muriel Proton | 13-02-2023 testConstructOneOrder() Test method for OrderDataFactory.constructOneOrder(orderName, accountForThisTest.ID, contractForThisTest.ID, pricebookForThisTest.Id) Signature @isTest static void testConstructOneOrder() Author Muriel Proton | 13-02-2023 testCreateOrdersListForEachContract() Test method for OrderDataFactory.createOrdersListForEachContract(contractListToCreateOrders, pricebookForThisTest) Signature @isTest static void testCreateOrdersListForEachContract() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderFilter",
        "fileName": "OrderFilter.html",
        "text": "OrderFilter : Signature public with sharing class OrderFilter Author : Muriel Proton OrderFilter Methods orderListFilterNOTLinkedToProduct2(orderList) Filter method to find wich reccords on Order have no link to a Product2 record orderListFilterStatusDraftToActivated(orderMapOld, orderMapNew) Filter method to find wich of the fields on Order records have been changed from Draft to Activated. Used in Trigger orderListFilterNOTLinkedToProduct2(orderList) Filter method to find wich reccords on Order have no link to a Product2 record Signature public static List<Order> orderListFilterNOTLinkedToProduct2(List<Order> orderList) Parameters List<Order> Returns List<Order> Author Muriel Proton | 13-02-2023 orderListFilterStatusDraftToActivated(orderMapOld, orderMapNew) Filter method to find wich of the fields on Order records have been changed from Draft to Activated. Used in Trigger Signature public static List<Order> orderListFilterStatusDraftToActivated(Map<Id, Order> orderMapOld, Map<Id, Order> orderMapNew) Parameters Map<Id, Order> Map<Id, Order> Returns List<Order> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderFilter_Test",
        "fileName": "OrderFilter_Test.html",
        "text": "OrderFilter_Test : Signature @isTest public with sharing class OrderFilter_Test Author : Muriel Proton OrderFilter_Test Properties Name Signature pricebook2Name private static String pricebook2Name productName private static String productName OrderFilter_Test Methods setupOrderFilter() TestSetup for OrderFilter_Test testOrderListFilterNOTLinkedToProduct2() Test method for List<Order> orderListToTest = OrderFilter.orderListFilterNOTLinkedToProduct2(orderList) testOrderListFilterStatusDraftToActivated() Test method for OrderFilter.orderListFilterStatusDraftToActivated(orderMapOld, orderMapNew) setupOrderFilter() TestSetup for OrderFilter_Test Signature @TestSetup static void setupOrderFilter() Author Muriel Proton | 13-02-2023 testOrderListFilterNOTLinkedToProduct2() Test method for List<Order> orderListToTest = OrderFilter.orderListFilterNOTLinkedToProduct2(orderList) Signature @isTest static void testOrderListFilterNOTLinkedToProduct2() Author Muriel Proton | 13-02-2023 testOrderListFilterStatusDraftToActivated() Test method for OrderFilter.orderListFilterStatusDraftToActivated(orderMapOld, orderMapNew) Signature @isTest static void testOrderListFilterStatusDraftToActivated() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderGet",
        "fileName": "OrderGet.html",
        "text": "OrderGet : Signature public with sharing class OrderGet Author : Muriel Proton OrderGet Methods checkPermissionOrder() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD getOrderByAccountAndContract(accountId, contractId) Get method Order records linked to both parametters Account Id and Contract ID getOrdersAll() Get methdod all records on Order getOrdersWhereStatusActivated() Get methdod Order records with the field Status set to Activated getOrderWithOrderItem(orderIdList) Get methdod Order records with the Id of the list passed as parametter checkPermissionOrder() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature private static void checkPermissionOrder() Author Muriel Proton | 13-02-2023 getOrderByAccountAndContract(accountId, contractId) Get method Order records linked to both parametters Account Id and Contract ID Signature public static List<Order> getOrderByAccountAndContract(Id accountId, Id contractId) Parameters Id Id Returns List<Order> Author Muriel Proton | 13-02-2023 getOrdersAll() Get methdod all records on Order Signature public static List<Order> getOrdersAll() Returns List<Order> Author Muriel Proton | 13-02-2023 getOrdersWhereStatusActivated() Get methdod Order records with the field Status set to Activated Signature public static List<Order> getOrdersWhereStatusActivated() Returns List<Order> Author Muriel Proton | 13-02-2023 getOrderWithOrderItem(orderIdList) Get methdod Order records with the Id of the list passed as parametter Signature public static List<Order> getOrderWithOrderItem(List<id> orderIdList) Parameters orderIdList Type: List<id> Returns List<Order> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderGet_Test",
        "fileName": "OrderGet_Test.html",
        "text": "OrderGet_Test : Signature @isTest public with sharing class OrderGet_Test Author : Muriel Proton OrderGet_Test Properties Name Signature accountName private static String accountName orderName private static String orderName pricebook2Name private static String pricebook2Name productName private static String productName OrderGet_Test Methods setupOrderGet() TestSetup for OrderGet_Test testGetOrderByAccountAndContract() Test method for OrderGet.getOrderByAccountAndContract(accountId, contractId) testGetOrdersAll() Test method for OrderGet.getOrdersAll() testGetOrdersWhereStatusActivated() Test method for OrderGet.getOrdersWhereStatusActivated() testGetOrderWithOrderItem() Test method for OrderGet.getOrderWithOrderItem(orderIdList) setupOrderGet() TestSetup for OrderGet_Test Signature @TestSetup static void setupOrderGet() Author Muriel Proton | 13-02-2023 testGetOrderByAccountAndContract() Test method for OrderGet.getOrderByAccountAndContract(accountId, contractId) Signature @isTest static void testGetOrderByAccountAndContract() Author Muriel Proton | 13-02-2023 testGetOrdersAll() Test method for OrderGet.getOrdersAll() Signature @isTest static void testGetOrdersAll() Author Muriel Proton | 13-02-2023 testGetOrdersWhereStatusActivated() Test method for OrderGet.getOrdersWhereStatusActivated() Signature @isTest static void testGetOrdersWhereStatusActivated() Author Muriel Proton | 13-02-2023 testGetOrderWithOrderItem() Test method for OrderGet.getOrderWithOrderItem(orderIdList) Signature @isTest static void testGetOrderWithOrderItem() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderItemDataFactory",
        "fileName": "OrderItemDataFactory.html",
        "text": "OrderItemDataFactory : Signature public with sharing class OrderItemDataFactory Author : Muriel Proton OrderItemDataFactory Methods constructOneOrderItem(orderId, product2Id, pricebookEntryId) Construct method one OrderItems with 3 parametters : the Id of an Order, the Id of a Product2 and Id of PricebookEntry createOrderItemsList(orderList, product2Id, pricebookEntryId) Insert method OrderItems with 3 parametters : a list of Orders, the Id of a product and Id of PricebookEntry, insert as many OrderItems as there are Orders in the list passed as parametter constructOneOrderItem(orderId, product2Id, pricebookEntryId) Construct method one OrderItems with 3 parametters : the Id of an Order, the Id of a Product2 and Id of PricebookEntry Signature public static OrderItem constructOneOrderItem(Id orderId, Id product2Id, Id pricebookEntryId) Parameters Id Id Id Returns OrderItem Author Muriel Proton | 13-02-2023 createOrderItemsList(orderList, product2Id, pricebookEntryId) Insert method OrderItems with 3 parametters : a list of Orders, the Id of a product and Id of PricebookEntry, insert as many OrderItems as there are Orders in the list passed as parametter Signature public static void createOrderItemsList(List<Order> orderList, Id product2Id, Id pricebookEntryId) Parameters List<Order> Id Id Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderItemDataFactory_Test",
        "fileName": "OrderItemDataFactory_Test.html",
        "text": "OrderItemDataFactory_Test : Signature @isTest public with sharing class OrderItemDataFactory_Test Author : Muriel Proton OrderItemDataFactory_Test Properties Name Signature accountName private static String accountName orderName private static String orderName pricebook2Name private static String pricebook2Name productName private static String productName OrderItemDataFactory_Test Methods setupOrderItemDataFactory() TestSetup for OrderItemDataFactory_Test testConstructOneOrderItem() Test method for OrderItemDataFactory.constructOneOrderItem(orderId, product2ForThisTest.Id, pricebookEntryListForThisTest[0].Id) testCreateOrderItemsList() Test method for PricebookEntryGet.getPricebookEntryByPricebook2AndProduct2(pricebookForThisTest.Id, product2ForThisTest.Id) setupOrderItemDataFactory() TestSetup for OrderItemDataFactory_Test Signature @TestSetup static void setupOrderItemDataFactory() Author Muriel Proton | 13-02-2023 testConstructOneOrderItem() Test method for OrderItemDataFactory.constructOneOrderItem(orderId, product2ForThisTest.Id, pricebookEntryListForThisTest[0].Id) Signature @isTest static void testConstructOneOrderItem() Author Muriel Proton | 13-02-2023 testCreateOrderItemsList() Test method for PricebookEntryGet.getPricebookEntryByPricebook2AndProduct2(pricebookForThisTest.Id, product2ForThisTest.Id) Signature @isTest static void testCreateOrderItemsList() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderItemGet",
        "fileName": "OrderItemGet.html",
        "text": "OrderItemGet : Signature public with sharing class OrderItemGet Author : Muriel Proton OrderItemGet Methods getOrderItemListAll() Get method OrderItem all records getOrderItemListAll() Get method OrderItem all records Signature public static List<OrderItem> getOrderItemListAll() Returns List<OrderItem> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderItemGet_Test",
        "fileName": "OrderItemGet_Test.html",
        "text": "OrderItemGet_Test : Signature @isTest public with sharing class OrderItemGet_Test Author : Muriel Proton OrderItemGet_Test Properties Name Signature accountName private static String accountName orderName private static String orderName pricebook2Name private static String pricebook2Name productName private static String productName OrderItemGet_Test Methods setupOrderItemGet() TestSetup for OrderGet_Test testGetOrdersAll() Test method for OrderItemGet.getOrderItemListAll() setupOrderItemGet() TestSetup for OrderGet_Test Signature @TestSetup static void setupOrderItemGet() Author Muriel Proton | 13-02-2023 testGetOrdersAll() Test method for OrderItemGet.getOrderItemListAll() Signature @isTest static void testGetOrdersAll() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderTriggerHandler",
        "fileName": "OrderTriggerHandler.html",
        "text": "OrderTriggerHandler : Signature public with sharing class OrderTriggerHandler extends TriggerHandler Author : Muriel Proton OrderTriggerHandler Methods afterDelete() Trigger Handler on Order implements the native method afterDelete() afterInsert() Trigger Handler on Order implements the native method afterInsert() beforeUpdate() Trigger Handler on Order implements the native method beforeUpdate() afterDelete() Trigger Handler on Order implements the native method afterDelete() Signature public override void afterDelete() Author Muriel Proton | 13-02-2023 afterInsert() Trigger Handler on Order implements the native method afterInsert() Signature public override void afterInsert() Author Muriel Proton | 13-02-2023 beforeUpdate() Trigger Handler on Order implements the native method beforeUpdate() Signature public override void beforeUpdate() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderTriggerHelper",
        "fileName": "OrderTriggerHelper.html",
        "text": "OrderTriggerHelper : Signature public with sharing class OrderTriggerHelper Author : Muriel Proton OrderTriggerHelper Methods displayMessageForEachOrderNotValid(orderList, orderMapNew) Methode has to be used within a condition or with a specified list, displays a message for each record on Order that is not valid sendErrorOnOrder(orderMapOld, orderMapNew) updateAccountActiveIfLinkedToOrder(orderList) updateAccountActiveIfOrderDelete(orderList) USE in Trigger After DELETE, Update method for Account records whith no Orders linked displayMessageForEachOrderNotValid(orderList, orderMapNew) Methode has to be used within a condition or with a specified list, displays a message for each record on Order that is not valid Signature public static void displayMessageForEachOrderNotValid(List<Order> orderList, Map<Id, Order> orderMapNew) Parameters List<Order> Map<Id,Order> Author Muriel Proton | 13-02-2023 sendErrorOnOrder(orderMapOld, orderMapNew) Signature public static void sendErrorOnOrder(Map<Id, Order> orderMapOld, Map<Id, Order> orderMapNew) Parameters Map<Id,Order> Map<Id,Order> Author Muriel Proton | 13-02-2023 updateAccountActiveIfLinkedToOrder(orderList) Signature public static void updateAccountActiveIfLinkedToOrder(List<Order> orderList) updateAccountActiveIfOrderDelete(orderList) USE in Trigger After DELETE, Update method for Account records whith no Orders linked Signature public static void updateAccountActiveIfOrderDelete(List<Order> orderList) Parameters List<Order> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderTriggerHelper_Test",
        "fileName": "OrderTriggerHelper_Test.html",
        "text": "OrderTriggerHelper_Test : Signature @isTest public with sharing class OrderTriggerHelper_Test Author : Muriel Proton OrderTriggerHelper_Test Properties Name Signature orderName private static String orderName pricebook2Name private static String pricebook2Name productName private static String productName OrderTriggerHelper_Test Methods setupOrderTriggerHelper() TestSetup for OrderTriggerHelper_Test testDisplayMessageForEachOrderNotValid() Test method for displayMessageForEachOrderNotValid(orderList,  orderMapNew) doese not exist beacause it is alredy tested with an other test method testSendErrorOnOrder() Test method for sendErrorOnOrder(orderMapOld, orderMapNew) testUpdateAccountActiveIfLinkedToOrder() Test method for OrderTriggerHelper.updateAccountActiveIfLinkedToOrder(orderListForTest) testUpdateAccountActiveIfOrderDelete() Test method for OrderTriggerHelper.updateAccountActiveIfOrderDelete(orderListForTest) setupOrderTriggerHelper() TestSetup for OrderTriggerHelper_Test Signature @TestSetup static void setupOrderTriggerHelper() Author Muriel Proton | 13-02-2023 testDisplayMessageForEachOrderNotValid() Test method for displayMessageForEachOrderNotValid(orderList,  orderMapNew) doese not exist beacause it is alredy tested with an other test method Signature @isTest public static void testDisplayMessageForEachOrderNotValid() Author Muriel Proton | 13-02-2023 testSendErrorOnOrder() Test method for sendErrorOnOrder(orderMapOld, orderMapNew) Signature @isTest public static void testSendErrorOnOrder() Author Muriel Proton | 13-02-2023 testUpdateAccountActiveIfLinkedToOrder() Test method for OrderTriggerHelper.updateAccountActiveIfLinkedToOrder(orderListForTest) Signature @isTest public static void testUpdateAccountActiveIfLinkedToOrder() Author Muriel Proton | 13-02-2023 testUpdateAccountActiveIfOrderDelete() Test method for OrderTriggerHelper.updateAccountActiveIfOrderDelete(orderListForTest) Signature @isTest public static void testUpdateAccountActiveIfOrderDelete() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderTrigger_Test",
        "fileName": "OrderTrigger_Test.html",
        "text": "OrderTrigger_Test : Signature @isTest public with sharing class OrderTrigger_Test Author : Muriel Proton OrderTrigger_Test Properties Name Signature orderName private static String orderName pricebook2Name private static String pricebook2Name productName private static String productName OrderTrigger_Test Methods setupOrderTrigger() TestSetup for OrderTrigger_Test testOrderTriggerHandlerAfterDelete() Test method to trigger OrderTrigger.trigger to check if the field Active__c on Account is set to false when the record Account has no Orders linked to it testOrderTriggerHandlerAfterInsert() Test method to trigger OrderTrigger.trigger to check if the field Active__c on Account records is set to tue testOrderTriggerUpdateNOTValid() Test method to trigger OrderTrigger.trigger when updating unvalid Order records testOrderTriggerUpdateValid() Test method to trigger OrderTrigger.trigger when updating valid Order records setupOrderTrigger() TestSetup for OrderTrigger_Test Signature @TestSetup static void setupOrderTrigger() Author Muriel Proton | 13-02-2023 testOrderTriggerHandlerAfterDelete() Test method to trigger OrderTrigger.trigger to check if the field Active__c on Account is set to false when the record Account has no Orders linked to it Signature @isTest public static void testOrderTriggerHandlerAfterDelete() Author Muriel Proton | 13-02-2023 testOrderTriggerHandlerAfterInsert() Test method to trigger OrderTrigger.trigger to check if the field Active__c on Account records is set to tue Signature @isTest public static void testOrderTriggerHandlerAfterInsert() Author Muriel Proton | 13-02-2023 testOrderTriggerUpdateNOTValid() Test method to trigger OrderTrigger.trigger when updating unvalid Order records Signature @isTest public static void testOrderTriggerUpdateNOTValid() Author Muriel Proton | 13-02-2023 testOrderTriggerUpdateValid() Test method to trigger OrderTrigger.trigger when updating valid Order records Signature @isTest public static void testOrderTriggerUpdateValid() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderUpdate",
        "fileName": "OrderUpdate.html",
        "text": "OrderUpdate : Signature public with sharing class OrderUpdate Author : Muriel Proton OrderUpdate Methods updateOrdersStatusToActivated(ordersList) Update method changes Status field to Activated on Order updateOrdersStatusToActivated(ordersList) Update method changes Status field to Activated on Order Signature public static void updateOrdersStatusToActivated(List<Order> ordersList) Parameters List<Order> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "OrderUpdate_Test",
        "fileName": "OrderUpdate_Test.html",
        "text": "OrderUpdate_Test : Signature @isTest public with sharing class OrderUpdate_Test Author : Muriel Proton OrderUpdate_Test Properties Name Signature pricebook2Name private static String pricebook2Name productName private static String productName OrderUpdate_Test Methods setupOrderUpdate() TestSetup for OrderUpdate_Test testUpdateOrdersStatusToActivated() Test method for OrderUpdate.updateOrdersStatusToActivated(orderListForUpdate) setupOrderUpdate() TestSetup for OrderUpdate_Test Signature @TestSetup static void setupOrderUpdate() Author Muriel Proton | 13-02-2023 testUpdateOrdersStatusToActivated() Test method for OrderUpdate.updateOrdersStatusToActivated(orderListForUpdate) Signature @isTest static void testUpdateOrdersStatusToActivated() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "Pricebook2DataFactory",
        "fileName": "Pricebook2DataFactory.html",
        "text": "Pricebook2DataFactory : Signature public with sharing class Pricebook2DataFactory Author : Muriel Proton Pricebook2DataFactory Properties Name Signature pricebook2Name private static String pricebook2Name Pricebook2DataFactory Methods createPricebook2() insert Pricebook2 one record createPricebook2() insert Pricebook2 one record Signature public static void createPricebook2() Author Muriel Proton | 13-02-2023 Warning : If you create a Pricebook it must be active and standard, but the field Standard is not wrightable."
    },
    {
        "title": "Pricebook2DataFactory_Test",
        "fileName": "Pricebook2DataFactory_Test.html",
        "text": "Pricebook2DataFactory_Test : Signature @isTest public with sharing class Pricebook2DataFactory_Test Author : Muriel Proton Pricebook2DataFactory_Test Methods testCreatePricebook2() Test method for Pricebook2DataFactory.createPricebook2() testCreatePricebook2() Test method for Pricebook2DataFactory.createPricebook2() Signature @isTest static void testCreatePricebook2() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "Pricebook2Get",
        "fileName": "Pricebook2Get.html",
        "text": "Pricebook2Get : Signature public with sharing class Pricebook2Get Author : Muriel Proton Pricebook2Get Methods checkPermissionPricebook2() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD getPriceBook2All() getPriceBook2ListByName(pricebookName) getPriceBook2Standard() Get method for one Standard PriceBook2 checkPermissionPricebook2() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature private static void checkPermissionPricebook2() Author Muriel Proton | 13-02-2023 getPriceBook2All() Signature public static List<Pricebook2> getPriceBook2All() Returns List<Pricebook2> Author Muriel Proton | 13-02-2023 getPriceBook2ListByName(pricebookName) Signature public static List<Pricebook2> getPriceBook2ListByName(String pricebookName) Parameters pricebookName Type: String Returns List<Pricebook2> Author Muriel Proton | 13-02-2023 getPriceBook2Standard() Get method for one Standard PriceBook2 Signature public static Pricebook2 getPriceBook2Standard() Returns Pricebook2 Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "Pricebook2Get_Test",
        "fileName": "Pricebook2Get_Test.html",
        "text": "Pricebook2Get_Test : Signature @isTest public with sharing class Pricebook2Get_Test Author : Muriel Proton Pricebook2Get_Test Properties Name Signature pricebook2Name private static String pricebook2Name Pricebook2Get_Test Methods setupPricebook2Get() TestSetup for Pricebook2Get_Test testGetPriceBook2ByName() Test method for Pricebook2Get.getPriceBook2ListByName(pricebook2Name) setupPricebook2Get() TestSetup for Pricebook2Get_Test Signature @TestSetup static void setupPricebook2Get() Author Muriel Proton | 13-02-2023 testGetPriceBook2ByName() Test method for Pricebook2Get.getPriceBook2ListByName(pricebook2Name) Signature @isTest static void testGetPriceBook2ByName() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "PricebookEntryDataFactory",
        "fileName": "PricebookEntryDataFactory.html",
        "text": "PricebookEntryDataFactory : Signature public with sharing class PricebookEntryDataFactory Author : Muriel Proton PricebookEntryDataFactory Methods checkPermissionPricebookEntry(priceBookEntryToInsert) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD createPriceBookEntry(pricebookForThisTest, product2ForThisTest) Insert method for one record on PricebookEntry, with 2 parametters createPriceBookEntryForPricebookStandard(product2ForThisTest) Insert method for one record on PricebookEntry, with only Product2 checkPermissionPricebookEntry(priceBookEntryToInsert) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature public static void checkPermissionPricebookEntry(PricebookEntry priceBookEntryToInsert) Parameters priceBookEntryToInsert Type: PricebookEntry Author Muriel Proton | 13-02-2023 createPriceBookEntry(pricebookForThisTest, product2ForThisTest) Insert method for one record on PricebookEntry, with 2 parametters Signature public static void createPriceBookEntry(PriceBook2 pricebookForThisTest, Product2 product2ForThisTest) Parameters PriceBook2 Product2 Author Muriel Proton | 13-02-2023 createPriceBookEntryForPricebookStandard(product2ForThisTest) Insert method for one record on PricebookEntry, with only Product2 Signature public static void createPriceBookEntryForPricebookStandard(Product2 product2ForThisTest) Parameters Product2 Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "PricebookEntryDataFactory_Test",
        "fileName": "PricebookEntryDataFactory_Test.html",
        "text": "PricebookEntryDataFactory_Test : Signature @isTest public with sharing class PricebookEntryDataFactory_Test Author : Muriel Proton PricebookEntryDataFactory_Test Methods setupPricebookEntryDataFactory() TestSetup for PricebookEntryDataFactory_Test testCreatePricebookEntry() Test method for PricebookEntryDataFactory.createPriceBookEntry(pricebookForThisTest, product2ForThisTest) testCreatePriceBookEntryForPricebookStandard() Test method for PricebookEntryDataFactory.createPriceBookEntryForPricebookStandard(product2ForThisTest) setupPricebookEntryDataFactory() TestSetup for PricebookEntryDataFactory_Test Signature @TestSetup static void setupPricebookEntryDataFactory() Author Muriel Proton | 13-02-2023 testCreatePricebookEntry() Test method for PricebookEntryDataFactory.createPriceBookEntry(pricebookForThisTest, product2ForThisTest) Signature @isTest static void testCreatePricebookEntry() Author Muriel Proton | 13-02-2023 testCreatePriceBookEntryForPricebookStandard() Test method for PricebookEntryDataFactory.createPriceBookEntryForPricebookStandard(product2ForThisTest) Signature @isTest static void testCreatePriceBookEntryForPricebookStandard() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "PricebookEntryGet",
        "fileName": "PricebookEntryGet.html",
        "text": "PricebookEntryGet : Signature public with sharing class PricebookEntryGet Author : Muriel Proton PricebookEntryGet Methods getPricebookEntryByPricebook2AndProduct2(pricebookIdForThisTest, product2IdForThisTest) Get method for all records on PricebookEntry, that are connected to the Id of Pricebook2 and to the Id ofProduct2, passed as parametters getPricebookEntryByPricebook2AndProduct2(pricebookIdForThisTest, product2IdForThisTest) Get method for all records on PricebookEntry, that are connected to the Id of Pricebook2 and to the Id ofProduct2, passed as parametters Signature public static List<PricebookEntry> getPricebookEntryByPricebook2AndProduct2(Id pricebookIdForThisTest, Id product2IdForThisTest) Parameters Id Id Returns List<PricebookEntry> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "PricebookEntryGet_Test",
        "fileName": "PricebookEntryGet_Test.html",
        "text": "PricebookEntryGet_Test : Signature @isTest public with sharing class PricebookEntryGet_Test Author : Muriel Proton PricebookEntryGet_Test Properties Name Signature accountName private static String accountName pricebook2Name private static String pricebook2Name product2Name private static String product2Name PricebookEntryGet_Test Methods setupPricebookEntryGet() TestSetup PricebookEntryGet_Test testGetPricebookEntryByPricebook2AndProduct2() Test method for PricebookEntryGet.getPricebookEntryByPricebook2AndProduct2(pricebookForThisTest.Id, product2ForThisTest.Id) setupPricebookEntryGet() TestSetup PricebookEntryGet_Test Signature @TestSetup static void setupPricebookEntryGet() Author Muriel Proton | 13-02-2023 testGetPricebookEntryByPricebook2AndProduct2() Test method for PricebookEntryGet.getPricebookEntryByPricebook2AndProduct2(pricebookForThisTest.Id, product2ForThisTest.Id) Signature @isTest static void testGetPricebookEntryByPricebook2AndProduct2() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "Product2DataFactory",
        "fileName": "Product2DataFactory.html",
        "text": "Product2DataFactory : Signature public with sharing class Product2DataFactory Author : Muriel Proton Product2DataFactory Properties Name Signature productName private static String productName Product2DataFactory Methods createProduct2() Insert method for one record on Product2 createProduct2() Insert method for one record on Product2 Signature public static void createProduct2() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "Product2DataFactory_Test",
        "fileName": "Product2DataFactory_Test.html",
        "text": "Product2DataFactory_Test : Signature @isTest public with sharing class Product2DataFactory_Test Author : Muriel Proton Product2DataFactory_Test Methods testCreateProduct2() Test method for Product2DataFactory.createProduct2() testCreateProduct2() Test method for Product2DataFactory.createProduct2() Signature @isTest static void testCreateProduct2() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "Product2Get",
        "fileName": "Product2Get.html",
        "text": "Product2Get : Signature public with sharing class Product2Get Author : Muriel Proton Product2Get Methods checkPermissionProduct2() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD getProduct2All() Get method for all records on Product2 getProduct2ListByName(product2Name) Get method for Product2 which have the same name as the parametter checkPermissionProduct2() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature private static void checkPermissionProduct2() Author Muriel Proton | 13-02-2023 getProduct2All() Get method for all records on Product2 Signature public static List<Product2> getProduct2All() Returns List<Product2> Author Muriel Proton | 13-02-2023 getProduct2ListByName(product2Name) Get method for Product2 which have the same name as the parametter Signature public static List<Product2> getProduct2ListByName(String product2Name) Parameters String Returns List<Product2> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "Product2Get_Test",
        "fileName": "Product2Get_Test.html",
        "text": "Product2Get_Test : Signature @isTest public with sharing class Product2Get_Test Author : Muriel Proton Product2Get_Test Methods setupProduct22Get() TestSetup Product2Get_Test testGetProduct2() Test method for List<Product2> product2ListToTest = Product2Get.getProduct2All() testGetProduct2ListByName() Test method for List<Product2> product2ListToTest = Product2Get.getProduct2ListByName(product2Name) setupProduct22Get() TestSetup Product2Get_Test Signature @TestSetup static void setupProduct22Get() Author Muriel Proton | 13-02-2023 testGetProduct2() Test method for List<Product2> product2ListToTest = Product2Get.getProduct2All() Signature @isTest static void testGetProduct2() Author Muriel Proton | 13-02-2023 testGetProduct2ListByName() Test method for List<Product2> product2ListToTest = Product2Get.getProduct2ListByName(product2Name) Signature @isTest static void testGetProduct2ListByName() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskCreateExecute_Queueable",
        "fileName": "TaskCreateExecute_Queueable.html",
        "text": "TaskCreateExecute_Queueable : Signature global with sharing class TaskCreateExecute_Queueable implements Schedulable Author : Muriel Proton TaskCreateExecute_Queueable Methods execute(sc) Batch method TaskCreateExecute_Queueable implements native class execute execute(sc) Batch method TaskCreateExecute_Queueable implements native class execute Signature global void execute(SchedulableContext sc) Parameters SchedulableContext Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskCreateExecute_QueueableTest",
        "fileName": "TaskCreateExecute_QueueableTest.html",
        "text": "TaskCreateExecute_QueueableTest : Signature @isTest public with sharing class TaskCreateExecute_QueueableTest Author : Muriel Proton TaskCreateExecute_QueueableTest Properties Name Signature CRON_EXP public static String CRON_EXP TaskCreateExecute_QueueableTest Methods testTaskCreateExecute() Test metho for the batch, that it is set on the right date. testTaskCreateExecute() Test metho for the batch, that it is set on the right date. Signature @isTest public static void testTaskCreateExecute() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskCreateHelper_Queueable",
        "fileName": "TaskCreateHelper_Queueable.html",
        "text": "TaskCreateHelper_Queueable : Signature public with sharing class TaskCreateHelper_Queueable Author : Muriel Proton TaskCreateHelper_Queueable Methods checkTasksPermissions(taskListToInsert) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD, insert method constructOneTask(accountId) Construct method, one linked to the Account in parametter constructTasksList(accountIdList) Construct method, as many Tasks as Accounts in parametters filterAccountListForNotLinkedToTasksNorOrders(accountRecordsList) filter method records on Account not linked to a Task nor an Order checkTasksPermissions(taskListToInsert) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD, insert method Signature public static void checkTasksPermissions(List<Task> taskListToInsert) Parameters List<Task> Author Muriel Proton | 13-02-2023 constructOneTask(accountId) Construct method, one linked to the Account in parametter Signature public static Task constructOneTask(Id accountId) Parameters Id Returns Task Warning used in Batch Author Muriel Proton | 13-02-2023 constructTasksList(accountIdList) Construct method, as many Tasks as Accounts in parametters Signature public static List<Task> constructTasksList(List<Id> accountIdList) Parameters accountIdList Type: List<Id> Returns List<Task> Warning used in Batch Author Muriel Proton | 13-02-2023 filterAccountListForNotLinkedToTasksNorOrders(accountRecordsList) filter method records on Account not linked to a Task nor an Order Signature public static List<Id> filterAccountListForNotLinkedToTasksNorOrders(List<Account> accountRecordsList) Parameters List<Account> Returns List<Id> Warning used in Batch Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskCreateHelper_QueueableTest",
        "fileName": "TaskCreateHelper_QueueableTest.html",
        "text": "TaskCreateHelper_QueueableTest : Signature @isTest public with sharing class TaskCreateHelper_QueueableTest Author : Muriel Proton TaskCreateHelper_QueueableTest Properties Name Signature orderName private static String orderName TaskCreateHelper_QueueableTest Methods setupTaskCreateHelper_Queueable() TestSetup for TaskCreateHelper_QueueableTest testConstructOneTask() Test method for TaskCreateHelper_Queueable.constructOneTask(accountId) testFilterAccountListForNotLinkedToTasksNorOrders() Test method for TaskCreateHelper_Queueable.filterAccountListForNotLinkedToTasksNorOrders(accountRecordsList) setupTaskCreateHelper_Queueable() TestSetup for TaskCreateHelper_QueueableTest Signature @TestSetup static void setupTaskCreateHelper_Queueable() Author Muriel Proton | 13-02-2023 testConstructOneTask() Test method for TaskCreateHelper_Queueable.constructOneTask(accountId) Signature @isTest public static void testConstructOneTask() Author Muriel Proton | 13-02-2023 testFilterAccountListForNotLinkedToTasksNorOrders() Test method for TaskCreateHelper_Queueable.filterAccountListForNotLinkedToTasksNorOrders(accountRecordsList) Signature @isTest public static void testFilterAccountListForNotLinkedToTasksNorOrders() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskCreate_Queueable",
        "fileName": "TaskCreate_Queueable.html",
        "text": "TaskCreate_Queueable : Signature public with sharing class TaskCreate_Queueable implements Database.Batchable<sObject> Author : Muriel Proton TaskCreate_Queueable Methods execute(bc, accountRecordsList) Batch method TaskCreate_Queueable implements native execute method finish(bc) Batch method TaskCreate_Queueable implements native finish method start(bc) Batch method TaskCreate_Queueable implements native start methode execute(bc, accountRecordsList) Batch method TaskCreate_Queueable implements native execute method Signature public void execute(Database.BatchableContext bc, List<Account> accountRecordsList) Parameters BatchableContext List<Account> Author Muriel Proton | 13-02-2023 finish(bc) Batch method TaskCreate_Queueable implements native finish method Signature public void finish(Database.BatchableContext bc) Parameters Database.BatchableContext Author Muriel Proton | 13-02-2023 start(bc) Batch method TaskCreate_Queueable implements native start methode Signature public List<Account> start(Database.BatchableContext bc) Parameters Database.BatchableContext Returns List<Account> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskCreate_QueueableTest",
        "fileName": "TaskCreate_QueueableTest.html",
        "text": "TaskCreate_QueueableTest : Signature @isTest public with sharing class TaskCreate_QueueableTest Author : Muriel Proton TaskCreate_QueueableTest Methods testTaskCreate_QueueableBatch() Test method for the batch testTaskCreate_QueueableBatch() Test method for the batch Signature @isTest public static void testTaskCreate_QueueableBatch() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskDataFactory",
        "fileName": "TaskDataFactory.html",
        "text": "TaskDataFactory : Signature public with sharing class TaskDataFactory Author : Muriel Proton TaskDataFactory Methods checkTasksPermissionsTask(taskListToInsert) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD, insert method constructOneTask(accountId) Construct method one Task linked to the Account passed as parametter createTasksList(accountIdList) Insert method for as many record on Task as recordson Account Set passed as parametter checkTasksPermissionsTask(taskListToInsert) Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD, insert method Signature public static void checkTasksPermissionsTask(List<Task> taskListToInsert) Parameters List<Task> Author Muriel Proton | 13-02-2023 constructOneTask(accountId) Construct method one Task linked to the Account passed as parametter Signature public static Task constructOneTask(Id accountId) Parameters Id Returns Task Author Muriel Proton | 13-02-2023 createTasksList(accountIdList) Insert method for as many record on Task as recordson Account Set passed as parametter Signature public static void createTasksList(Set<Id> accountIdList) Parameters Set<Id> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskDataFactory_Test",
        "fileName": "TaskDataFactory_Test.html",
        "text": "TaskDataFactory_Test : Signature @isTest public with sharing class TaskDataFactory_Test Author : Muriel Proton TaskDataFactory_Test Properties Name Signature accountName private static String accountName TaskDataFactory_Test Methods setupTaskDataFactory() TestSetup for TaskDataFactory_Test taskConstructOneTask() Test method for TaskDataFactory.constructOneTask(accountId) testCreateTasksList() Test method for TaskDataFactory.createTasksList(accountIdSet) setupTaskDataFactory() TestSetup for TaskDataFactory_Test Signature @TestSetup static void setupTaskDataFactory() Author Muriel Proton | 13-02-2023 taskConstructOneTask() Test method for TaskDataFactory.constructOneTask(accountId) Signature @isTest public static void taskConstructOneTask() Author Muriel Proton | 13-02-2023 testCreateTasksList() Test method for TaskDataFactory.createTasksList(accountIdSet) Signature @isTest public static void testCreateTasksList() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskGet",
        "fileName": "TaskGet.html",
        "text": "TaskGet : Signature public with sharing class TaskGet Author : Muriel Proton TaskGet Methods checkTaskPermissions() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD getTaskAll() Get method all records on Task checkTaskPermissions() Validate CRUD permission before SOQL/DML operation(rule: Security-ApexCRUDViolation) Apex PMD Signature public static void checkTaskPermissions() Author Muriel Proton | 13-02-2023 getTaskAll() Get method all records on Task Signature public static List<Task> getTaskAll() Returns List<Task> Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TaskGet_Test",
        "fileName": "TaskGet_Test.html",
        "text": "TaskGet_Test : Signature @isTest public with sharing class TaskGet_Test Author : Muriel Proton TaskGet_Test Methods setupTaskGet() TestSetup for TaskGet_Test testGetTaskAll() Test for TaskGet.getTaskAll() setupTaskGet() TestSetup for TaskGet_Test Signature @TestSetup public static void setupTaskGet() Author Muriel Proton | 13-02-2023 testGetTaskAll() Test for TaskGet.getTaskAll() Signature @isTest public static void testGetTaskAll() Author Muriel Proton | 13-02-2023"
    },
    {
        "title": "TriggerHandler",
        "fileName": "TriggerHandler.html",
        "text": "TriggerHandler : Signature public virtual class TriggerHandler Author : Muriel Proton TriggerHandler Properties Name Signature Annotations bypassedHandlers private static Set<String> bypassedHandlers context private TriggerContext context @TestVisible isTriggerExecuting private Boolean isTriggerExecuting @TestVisible loopCountMap private static Map<String, LoopCount> loopCountMap Enums Name Signature Values Description TriggerContext private enum TriggerContext BEFORE_INSERT, BEFORE_UPDATE, BEFORE_DELETE, AFTER_INSERT, AFTER_UPDATE, AFTER_DELETE, AFTER_UNDELETE This inner class contains constants conserning context. Called by : @Interface : @Constructor : TriggerHandler Constructors TriggerHandler() This is the CONSTRUCTOR method. Called by : TriggerHandler() This is the CONSTRUCTOR method. Called by : Signature public TriggerHandler() Parameters etters : None Returns : the context of the trigger. TriggerHandler Methods addToLoopCount() This method increments the loop count. Called by : afterDelete() afterInsert() afterUndelete() afterUpdate() beforeDelete() beforeInsert() context methods beforeUpdate() bypass(handlerName) public static methods clearAllBypasses() This method . Called by : clearBypass(handlerName) This method . Called by : clearMaxLoopCount() This method resets the maximum of times a Trigger can enter a loop. Called by : getHandlerName() This method returns the name of the handler. Called by : isBypassed(handlerName) This method . Called by : run() public instance methods setMaxLoopCount(max) This method sets the maximum of times a Trigger can enter a loop. Called by : setTriggerContext() TESTS METHODS ! private instancemethods setTriggerContext(ctx, testMode) This method setup trigger context of the test methode. It sets trigger context. Called by : validateRun() This method makes sure this trigger should continue to run. Called by : addToLoopCount() This method increments the loop count. Called by : Signature @TestVisible private void addToLoopCount() Parameters etters : String, Boolean Returns : Void afterDelete() Signature @TestVisible protected virtual void afterDelete() afterInsert() Signature @TestVisible protected virtual void afterInsert() afterUndelete() Signature @TestVisible protected virtual void afterUndelete() afterUpdate() Signature @TestVisible protected virtual void afterUpdate() beforeDelete() Signature @TestVisible protected virtual void beforeDelete() beforeInsert() context methods Signature @TestVisible protected virtual void beforeInsert() beforeUpdate() Signature @TestVisible protected virtual void beforeUpdate() bypass(handlerName) public static methods Signature public static void bypass(String handlerName) clearAllBypasses() This method . Called by : Signature public static void clearAllBypasses() Parameters etters : None Returns : Void clearBypass(handlerName) This method . Called by : Signature public static void clearBypass(String handlerName) Parameters etters : None Returns : Void clearMaxLoopCount() This method resets the maximum of times a Trigger can enter a loop. Called by : Signature public void clearMaxLoopCount() Parameters etters : None Returns : Void getHandlerName() This method returns the name of the handler. Called by : Signature @TestVisible private String getHandlerName() Parameters etters : Returns : Void isBypassed(handlerName) This method . Called by : Signature public static Boolean isBypassed(String handlerName) Parameters etters : None Returns : Void run() public instance methods Signature public void run() setMaxLoopCount(max) This method sets the maximum of times a Trigger can enter a loop. Called by : Signature public void setMaxLoopCount(Integer max) Parameters etters : Integer Returns : Void setTriggerContext() TESTS METHODS ! private instancemethods Signature @TestVisible private void setTriggerContext() setTriggerContext(ctx, testMode) This method setup trigger context of the test methode. It sets trigger context. Called by : Signature @TestVisible private void setTriggerContext(String ctx, Boolean testMode) Parameters etters : String, Boolean Returns : Void validateRun() This method makes sure this trigger should continue to run. Called by : Signature @TestVisible private Boolean validateRun() Parameters etters : Returns : Void TriggerHandler.LoopCount inner classes Signature @TestVisible private class LoopCount TriggerHandler.LoopCount Properties Name Signature count private Integer count max private Integer max TriggerHandler.LoopCount Constructors LoopCount() CONSTRUCTOR Called by : LoopCount(max) LoopCount() CONSTRUCTOR Called by : Signature public LoopCount() Parameters etters : Returns : Void LoopCount(max) Signature public LoopCount(Integer max) TriggerHandler.LoopCount Methods exceeded() getCount() getMax() increment() setMax(max) exceeded() Signature public Boolean exceeded() getCount() Signature public Integer getCount() getMax() Signature public Integer getMax() increment() Signature public Boolean increment() setMax(max) Signature public void setMax(Integer max) TriggerHandler.TriggerHandlerException This inner Class is the exception class for this class. Called by : @Interface : @Constructor : Signature public class TriggerHandlerException extends Exception"
    },
    {
        "title": "TriggerHandler_Test",
        "fileName": "TriggerHandler_Test.html",
        "text": "TriggerHandler_Test : Signature @isTest private class TriggerHandler_Test Author : Muriel Proton TriggerHandler_Test Properties Name Signature handler private static TriggerHandler_Test.TestHandler handler lastMethodCalled private static String lastMethodCalled TRIGGER_CONTEXT_ERROR private static final String TRIGGER_CONTEXT_ERROR TriggerHandler_Test Methods afterDeleteMode() afterInsertMode() afterUndeleteMode() afterUpdateMode() beforeDeleteMode() beforeInsertMode() beforeUpdateMode() resetTest() testing utilities testAfterDelete() testAfterInsert() testAfterUndelete() testAfterUpdate() testBeforeDelete() testBeforeInsert() unit tests testBeforeUpdate() testBypassAPI() testGetHandlerName() testLoopCount() testLoopCountClass() testNonTriggerContext() testVirtualMethods() afterDeleteMode() Signature private static void afterDeleteMode() afterInsertMode() Signature private static void afterInsertMode() afterUndeleteMode() Signature private static void afterUndeleteMode() afterUpdateMode() Signature private static void afterUpdateMode() beforeDeleteMode() Signature private static void beforeDeleteMode() beforeInsertMode() Signature private static void beforeInsertMode() beforeUpdateMode() Signature private static void beforeUpdateMode() resetTest() testing utilities Signature private static void resetTest() testAfterDelete() Signature @isTest static void testAfterDelete() testAfterInsert() Signature @isTest static void testAfterInsert() testAfterUndelete() Signature @isTest static void testAfterUndelete() testAfterUpdate() Signature @isTest static void testAfterUpdate() testBeforeDelete() Signature @isTest static void testBeforeDelete() testBeforeInsert() unit tests Signature @isTest static void testBeforeInsert() testBeforeUpdate() Signature @isTest static void testBeforeUpdate() testBypassAPI() Signature @isTest static void testBypassAPI() testGetHandlerName() Signature @isTest static void testGetHandlerName() testLoopCount() Signature @isTest static void testLoopCount() testLoopCountClass() Signature @isTest static void testLoopCountClass() testNonTriggerContext() Signature @isTest static void testNonTriggerContext() testVirtualMethods() Signature @isTest static void testVirtualMethods() TriggerHandler_Test.TestHandler Signature private class TestHandler extends TriggerHandler TriggerHandler_Test.TestHandler Methods afterDelete() afterInsert() afterUndelete() afterUpdate() beforeDelete() beforeInsert() beforeUpdate() afterDelete() Signature public override void afterDelete() afterInsert() Signature public override void afterInsert() afterUndelete() Signature public override void afterUndelete() afterUpdate() Signature public override void afterUpdate() beforeDelete() Signature public override void beforeDelete() beforeInsert() Signature public override void beforeInsert() beforeUpdate() Signature public override void  beforeUpdate()"
    }
];
